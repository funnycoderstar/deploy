(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{436:function(t,a,e){"use strict";e.r(a);var r=e(33),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"伪类和伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类和伪元素"}},[t._v("#")]),t._v(" 伪类和伪元素")]),t._v(" "),e("h3",{attrs:{id:"为什么引入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么引入"}},[t._v("#")]),t._v(" 为什么引入?")]),t._v(" "),e("p",[e("code",[t._v("css")]),t._v("引入伪类和伪元素概念是为了格式化文档树以外的信息。\b伪类和伪元素是用来修饰不在文档树中的部分。")]),t._v(" "),e("h3",{attrs:{id:"伪类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[t._v("#")]),t._v(" 伪类")]),t._v(" "),e("p",[e("strong",[t._v("伪类")]),t._v(" 用于当元素处于某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。比如说，用户悬停在指定的元素时，我们可以通:hover来描述这个元素的状态。\b虽然它和普通的css类类似，可以为已有的元素添加样式，但是它只有处于dom树无法描述的状态下才能为元素添加样式，所以将其称为伪类。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://www.alloyteam.com/wp-content/uploads/2016/05/%E4%BC%AA%E7%B1%BB.png",alt:"图片来源网络"}})]),t._v(" "),e("h3",{attrs:{id:"伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[t._v("#")]),t._v(" 伪元素")]),t._v(" "),e("p",[e("strong",[t._v("伪元素")]),t._v(" 用于创建不在文档树中的元素，并为其添加样式，比如说，我们可以通过：before来在一个元素前添加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://www.alloyteam.com/wp-content/uploads/2016/05/%E4%BC%AA%E5%85%83%E7%B4%A0.png",alt:"图片来源网络"}})]),t._v(" "),e("p",[t._v("CSS3 规范中的要求使用双冒号 (:😃 表示伪元素，以此来区分伪元素和伪类，比如::before 和::after 等伪元素使用双冒号 (:😃，:hover 和:active 等伪类使用单冒号 (😃。虽然 CSS3 标准要求伪元素使用双冒号的写法，但也依然支持单冒号的写法。")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"http://www.alloyteam.com/2016/05/summary-of-pseudo-classes-and-pseudo-elements/#prettyPhoto",target:"_blank",rel:"noopener noreferrer"}},[t._v("总结伪类和伪元素"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);