(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{188:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("使用css自定义属性实现一键换肤功能")])]),t._v(" "),a("h2",{attrs:{id:"css自定义属性简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css自定义属性简介","aria-hidden":"true"}},[t._v("#")]),t._v(" css自定义属性简介")]),t._v(" "),a("p",[t._v("css 的自定义属性功能(var), 在css中使用变量,和less及scss不同的是,在js中可以直接修改变量值;")]),t._v(" "),a("h2",{attrs:{id:"用法-mdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-mdn","aria-hidden":"true"}},[t._v("#")]),t._v(" 用法: "),a("a",{attrs:{href:""}},[t._v("MDN")])]),t._v(" "),a("p",[t._v("它们使用自定义属性符号（例如"),a("code",[t._v("--main-color: black;")]),t._v("）进行设置，并使用var()函数。\n例如: "),a("code",[t._v("color: var(--main-color)")]),t._v(";")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("root "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" brown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" white"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  background"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  margin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  display"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以在javascript中设置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get variable from inline style")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--my-var"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get variable from wherever")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--my-var"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set variable on inline style")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--my-var"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("浏览器支持\ncss自定义属性目前支持的浏览器有\n"),a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1537873558720.png?width=2594&height=956&imageView2/3/",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"使用css-vars-polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用css-vars-polyfill","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用"),a("a",{attrs:{href:"https://github.com/jhildenbiddle/css-vars-ponyfill",target:"_blank",rel:"noopener noreferrer"}},[t._v("css-vars-polyfill"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1537873565560.png?width=874&height=300&imageView2/3/",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"原理简析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理简析","aria-hidden":"true"}},[t._v("#")]),t._v(" 原理简析")]),t._v(" "),a("p",[t._v("刚开始第一眼想到的肯定是遍历所有的文件将CSS变量的值转为静态的值，但是有几个问题需要考虑一下\n1.将所有的都遍历一遍然后进行替换，如果能快速的做到？\n2.新增DOM节点的时候，怎么判断？ (MutationObserver)")]),t._v(" "),a("p",[t._v("先判断当前是否原生支持 css自定义属性;")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isBrowser       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isNativeSupport "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" isBrowser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("supports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("supports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(--a: 0)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("从指定的"),a("code",[t._v("<style>")]),t._v("和"),a("code",[t._v("<link>")]),t._v("元素获取，解析和转换CSS自定义属性为静态值，然后将带有静态值的新"),a("code",[t._v("<style>")]),t._v("元素附加到DOM，以便为旧版浏览器提供CSS自定义属性兼容性。\n还为现代和旧版浏览器中的运行时值的实时更新提供了单一界面。")]),t._v(" "),a("h2",{attrs:{id:"polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polyfill","aria-hidden":"true"}},[t._v("#")]),t._v(" polyfill")]),t._v(" "),a("blockquote",[a("p",[t._v("补充polyfill 的简单解释\npolyfill用于表示根据新特性的定义,创建一段与之行为等价但能够在旧的javascript环境中运行的代码")])]),t._v(" "),a("p",[t._v("引用 wiki 里的一句话解释")]),t._v(" "),a("blockquote",[a("p",[t._v('In web development, a polyfill is code that implements a feature on web browsers that do not support the feature. Most often, it refers to a JavaScript library that implements an HTML5web standard, either an established standard (supported by some browsers) on older browsers, or a proposed standard (not supported by any browsers) on existing browsers. Formally, "a polyfill is a shim for a browser API".')])]),t._v(" "),a("p",[t._v("可以这样简单的理解一下:\ncss自定义变量在IE浏览器中无法使用,但是使用了"),a("a",{attrs:{href:"https://github.com/jhildenbiddle/css-vars-ponyfill",target:"_blank",rel:"noopener noreferrer"}},[t._v("css-vars-polyfill"),a("OutboundLink")],1),t._v(" ,就可以让我们在IE9+中也可以使用该属性;\n还记得 "),a("a",{attrs:{href:"https://babeljs.io/docs/en/babel-polyfill/",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel-polyfill"),a("OutboundLink")],1),t._v(" 么,  babel允许我们使用es6的语法,它主要是把es6的语法转成大多数浏览器可是支持的es5语法, 可以使用 工具 来看一下平常所写的es6语法对应到es5是什么样的, 例如\n"),a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1537873573302.png?width=1748&height=268&imageView2/3/",alt:""}}),t._v("\n但是像  Array.from , Object.assign, Array.prototype.includes, promise, async ,await 这些都是es5语法中没有的,我们还是想使用,但是很多浏览器不支持怎么办, babel-polyfill就是帮我们解决这个问题的")])])}),[],!1,null,null,null);s.default=e.exports}}]);