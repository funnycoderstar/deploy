(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{245:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("Node开发离不开npm,而脚本功能是npm 最强大,最常用的功能之一\nnpm脚本(npm scripts)")]),s._v(" "),t("h2",{attrs:{id:"_1-什么是npm-脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是npm-脚本","aria-hidden":"true"}},[s._v("#")]),s._v(" 1.什么是npm 脚本")]),s._v(" "),t("p",[s._v("npm 允许在package.json文件里面,使用"),t("code",[s._v("scripts")]),s._v("字段定义脚本命令")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node build.js"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("上面代码是"),t("code",[s._v("package.json")]),s._v("文件的一个片段,里面"),t("code",[s._v("scripts")]),s._v("字段是一个对象,它的每一个属性,对应一段脚本,比如,build命令对应的的脚本是 "),t("code",[s._v("node build.js")]),s._v("\n命令行下使用 "),t("code",[s._v("npm run")]),s._v("命令,就可以执行这段脚本.")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("$ npm run build\n# 等同于执行\n$ node build"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])])]),t("p",[s._v("这些定义在"),t("code",[s._v("package.jso")]),s._v("n里面的脚本,就被称为npm 脚本,优点很多")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("- 项目的相关脚本,可以集中在同一个地方\n- 不同项目的脚本命令,只要功能相同,就可以有相同的对外接口.用户不需要知道怎么测试你的项目,只要运行npm run test即可\n- 可以利用npm提供的很多辅助功能\n\n")])])]),t("p",[s._v("查看当前项目的所有npm 命令,可以使用不带任何参数的 "),t("code",[s._v("npm run")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("npm run\n")])])]),t("h2",{attrs:{id:"_2-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-原理","aria-hidden":"true"}},[s._v("#")]),s._v(" 2.原理")]),s._v(" "),t("p",[s._v("npm 脚本的原理非常简单,每当执行 "),t("code",[s._v("npm run")]),s._v(" ,就会自动新建一个Shell,在这个Shell里面执行指定的脚本命令.因此,只要是Shell(一般是Bash)可以运行的命令,就可以直接写在npm脚本里面")]),s._v(" "),t("p",[s._v("比较特别的是, "),t("code",[s._v("npm run")]),s._v("新建的这个shell,会将当前目录的 "),t("code",[s._v("node_modules/.bin")]),s._v("子目录加入"),t("code",[s._v("PATH")]),s._v("变量,执行结束后,再将"),t("code",[s._v("PATH")]),s._v("变量恢复原样.")]),s._v(" "),t("p",[s._v("这意味着,当前目录的  "),t("code",[s._v("node_modules/.bin")]),s._v("子目录里面所有脚本,都可以直接用脚本名调用,而不必加上路径.比如，当前项目的依赖里面有 Mocha，只要直接写mocha test就可以了。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"test": "mocha test"\n')])])]),t("p",[s._v("而不用写成下面这样")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"test": "./node_modules/.bin/mocha test"\n')])])]),t("p",[s._v("由于 npm脚本的唯一要求就是可以在Shell执行,因此它不一定是Node脚本,任何可执行文件都可以写在里面.\nnpm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是0，npm 就认为这个脚本执行失败。")]),s._v(" "),t("h2",{attrs:{id:"_3-通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-通配符","aria-hidden":"true"}},[s._v("#")]),s._v(" 3.通配符")]),s._v(" "),t("p",[s._v("npm 脚本就是shell脚本,因此可以使用Shell通配符")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"lint": "jshint *.js"\n"lint": "jshint **/*.js"\n')])])]),t("p",[s._v("*代表任意文件名,**表示任意一层子目录\n如果要将通配符传入原始命令，防止被 Shell 转义，要将星号转义。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"test": "tap test/\\*.js"\n')])])]),t("h2",{attrs:{id:"_4-传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-传参","aria-hidden":"true"}},[s._v("#")]),s._v(" 4.传参")])])}),[],!1,null,null,null);a.default=n.exports}}]);