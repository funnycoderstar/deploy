(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{191:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"使用flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用flex布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用flex布局")]),t._v(" "),a("pre",[a("code",[t._v("  flex使用方法很简单,只需要将其display属性设置为flex即可,也可以设置行内的flex,记得webkit内核的浏览器,必须加上-webkit,\n")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ele")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -webkit-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("diaplay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -webkit-inline-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在flex中,最核心的概念就是容器和轴,其中容器分为父容器和子容器,轴分为主轴和交叉轴(主轴默认为水平方向,方向向右,交叉轴为主轴顺时针旋转90度)")]),t._v(" "),a("h2",{attrs:{id:"父容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父容器属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 父容器属性")]),t._v(" "),a("p",[t._v("父容器有六个属性")])]),t._v(" "),a("li",[a("p",[t._v("flex-direction: 主轴方向.")])]),t._v(" "),a("li",[a("p",[t._v("flex-wrap: 超出父容器子容器的排列方式")])]),t._v(" "),a("li",[a("p",[t._v("flex-flow: flex-direction属性和flex-wrap属性的简写方式")])]),t._v(" "),a("li",[a("p",[t._v("justify-content: 子容器在主轴的排列方向")])]),t._v(" "),a("li",[a("p",[t._v("align-items: 子容器的交叉轴上的排列方式")])]),t._v(" "),a("li",[a("p",[t._v("align-content: 多根轴线的对齐方式")]),t._v(" "),a("h4",{attrs:{id:"flex-direciton属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-direciton属性","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-direciton属性")]),t._v(" "),a("p",[t._v("flex-direction属性决定主轴的方向(主轴的方向不一定是水平的,这个属性就是设置主轴的方向,主轴默认是水平方向,从左至右)")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           // 默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("主轴为水平方向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("起点在左端"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从左到右\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   // 主轴为水平方向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("起点在右端"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从右到左\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        // 主轴为垂直方向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("起点在上端"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从上到下\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        // 主轴为垂直方向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("起点在下端"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从下到上\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"flex-wrap属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap属性","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-wrap属性")]),t._v(" "),a("p",[t._v("flex-wrap属性决定自容器如果在一条轴线排不下时,如何换行")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           // 默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不换行\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       // 换行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("第一行在下面\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     // 换行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("第一行在=上面\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"子容器也有6个属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子容器也有6个属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 子容器也有6个属性")])]),t._v(" "),a("li",[a("p",[t._v("order: 子容器的排列顺序")])]),t._v(" "),a("li",[a("p",[t._v("flex-grow: 子容器剩余空间的拉伸比例")])]),t._v(" "),a("li",[a("p",[t._v("flex-shrink: 子容器超出空间的压缩比例")])]),t._v(" "),a("li",[a("p",[t._v("flex-basis: 子容器不伸缩情况下的原始尺寸")])]),t._v(" "),a("li",[a("p",[t._v("flex: 子元素的flex属性是flex-grow, flex-shrink, flex-basis的简写")])]),t._v(" "),a("li",[a("p",[t._v("align-self: 允许单个子容器与其他字容器不一样的对齐方式,可覆盖父元素aligns-items属性(交叉轴),默认是auto,表示继承父元素的align-items属性,如果没有付元素,则等同于strech")])])]),t._v(" "),a("h4",{attrs:{id:"order属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order属性","aria-hidden":"true"}},[t._v("#")]),t._v(" order属性")]),t._v(" "),a("p",[t._v("order属性定义子容器的排列顺序,数值越小,排列越靠前")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <interger>\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"flex-grow属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow属性","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-grow属性")]),t._v(" "),a("p",[t._v("flex-grow属性定义子容器的放大比例,默认为0")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 0 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果子容器的flex-grow属性都为1,则他们将等分剩余空间(如果有的话).如果一个项目的flex-grow属性为2,其他项目都为1,则前者占据的剩余空间将比其他项多一倍;")]),t._v(" "),a("h3",{attrs:{id:"flex-shrink属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink属性","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-shrink属性")]),t._v(" "),a("p",[t._v("flex-shrink定义了子容器的缩小比例,默认为1,如果空间不足,该项目将缩小")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果所有子容器的flex-shrink属性都为1,当空间不足时,都将等比例缩小.如果一个项目的flex-shrink的属性为0,其他项目都为1,则空间不足时,前者不缩小;"),a("br"),t._v("\n负值对该属性无效")]),t._v(" "),a("h3",{attrs:{id:"flex-basis属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis属性","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-basis属性")]),t._v(" "),a("p",[t._v("flex-basis属性定义了在分配多余空间之前,项目占据了主轴空间,浏览器根据这个属性,计算主轴是否有多余空间.它的默认值为auto,即项目的本来大小;")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("它可以设置跟width和height属性一样的值(比如350px),则项目将占据固定空间")]),t._v(" "),a("h3",{attrs:{id:"flex属性是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex属性是","aria-hidden":"true"}},[t._v("#")]),t._v(" flex属性是")]),t._v(" "),a("p",[t._v("flex是flex-grow,flex-shrink,flex-basis的缩写")])])}),[],!1,null,null,null);s.default=n.exports}}]);