(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{157:function(e,n,r){"use strict";r.r(n);var t=r(0),o=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("blockquote",[r("p",[e._v("总结一下小程序的坑")])]),e._v(" "),r("h4",{attrs:{id:"_1，遇到安卓上数据显示不出来-但是ios和安卓上显示不出来"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1，遇到安卓上数据显示不出来-但是ios和安卓上显示不出来","aria-hidden":"true"}},[e._v("#")]),e._v(" 1，遇到安卓上数据显示不出来,但是ios和安卓上显示不出来")]),e._v(" "),r("ul",[r("li",[e._v("上网查了一下，"),r("a",{attrs:{href:"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=2980",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考1"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=1909",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考2"),r("OutboundLink")],1),e._v(",")]),e._v(" "),r("li",[e._v("可能原因如下：")]),e._v(" "),r("li",[e._v("1.域名配置问题，证书信任问题")]),e._v(" "),r("li",[e._v("2.es6在安卓上有的不支持，即使开启es6转es5的语法，安卓上也不支持")]),e._v(" "),r("li",[e._v("...")]),e._v(" "),r("li",[e._v("问题一，问了后端，他们说检查好几遍了，不是这儿的问题，所以排除，")]),e._v(" "),r("li",[e._v("问题二，查了一下"),r("a",{attrs:{href:"https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/details.html?t=201716",target:"_blank",rel:"noopener noreferrer"}},[e._v("小程序中es6语法的支持"),r("OutboundLink")],1),e._v("把用到的不支持的语法改了(可以用webpack配置babel,但是发现此问题时已经打算提交审核，时间紧迫,所以先把不支持的语法改了)，还是不行，排除问题2；\n后来就冷静的思考了一下，为什么安卓上没有数据，请求数据前的步骤是否走通，然后一步一个log的看，我们这里的登录逻辑是先有个get请求，后端返回true或false来判断是都需要登录，判断为true时需要获取返回信息头部的session字段，然后之后每次请求头部带上这个字段，")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("function getStorage(key) {\n    return new Promise(function (resolve, reject) {\n        // 先判断本地数据存储有没有cookie\n        wx.getStorage({\n            key: key,\n            success: function (res) {\n                resolve(res.data);\n            },\n            fail: function (res) {\n                console.log(res);\n                resolve(null);\n                // if (res.errMsg == 'getStorage:fail' || res.errMsg == 'getStorage:fail data not found') {\n                    \x3c!--安卓返回 getStorage:fail， ios 返回 res.errMsg == 'getStorage:fail data not found'--\x3e\n                //     console.log('没有cookie');\n                //     resolve(null);\n                // } else {\n                //     console.log('这是一个问题');\n                //     reject(res.errMsg);\n                // }\n            },\n        });\n    });\n}\n")])])]),r("ul",[r("li",[e._v("判断本地缓存没有 session的时候时请求的第一个登录接口，安卓返回 getStorage:fail， ios 返回 res.errMsg == 'getStorage:fail data not found'，刚开始只判断了res.errMsg == 'getStorage:fail data not found'，所以安卓上会一直走reject，最后错误被catch出来，而并没有请求接口，导致没有数据")]),e._v(" "),r("li",[e._v("总结： 微信小程序开发过程中一定要用真机测试，微信开发者工具和真机上很多地方都有出入")])]),e._v(" "),r("h4",{attrs:{id:"_2，小程序接口异步问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2，小程序接口异步问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 2，小程序接口异步问题")]),e._v(" "),r("ul",[r("li",[e._v("没有使用别的框架，单纯的按照微信小程序的官方文档来写，所以并不能用es7的 async函数和await，只能用目前小程序所支持的promise,但是对每一个封装有很麻烦")]),e._v(" "),r("li",[e._v("解决方案：写一个转换函数，将小程序的所有api转换成promise函数")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("const wx = {\n    fun1: () => console.log(1),\n    fun2: ({a, b, success, fail}) => {\n        if (a + b > 10) {\n            fail('error: a + b > 10');\n            return;\n        }\n        success(a + b);\n    },\n};\nfunction promiseify(func) {\n    return (args) => {\n        return new Promise((resolve, reject) => {\n            func(Object.assign(args, {\n                success: resolve,\n                fail: reject,\n            }));\n        })\n    }\n}\nfor (const key in wx) {\n    if (Object.prototype.hasOwnProperty.call(wx, key) && typeof wx[key] === 'function') {\n        wx[`_${key}`] = promiseify(wx[key]);\n    }\n}\nwx._fun2({a: 3, b: 4}).then(sum => {\n    console.log(sum);\n}).catch(err => {\n    console.log(err);\n});\n\nwx._fun2({a: 5, b: 6}).then(sum => {\n    console.log(sum);\n}).catch(err => {\n    console.log(err);\n});\n")])])]),r("h4",{attrs:{id:"_3-ios数据无法正常显示，请求接口一直显示need-login"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-ios数据无法正常显示，请求接口一直显示need-login","aria-hidden":"true"}},[e._v("#")]),e._v(" 3,ios数据无法正常显示，请求接口一直显示need login,")]),e._v(" "),r("ul",[r("li",[e._v("登录逻辑： 1，微信授权 2,去请求get的login判断为true,时 3，获取header里的session存储起来，之后每次请求都得带上 4，去请求post的login接口\n所以先从判断授权开始，但是在真机上测试时，一开始并不弹出授权弹窗")]),e._v(" "),r("li",[e._v("参考"),r("a",{attrs:{href:"https://devework.com/weixin-weapp-auth-failed.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("提升用户体验，微信小程序“授权失败”场景的优雅处理"),r("OutboundLink")],1),e._v("\n所以尝试不在登录之前判断微信授权，果然可以请求到数据；而在需要的时候去判断是否授权，具体参考上述文档")])]),e._v(" "),r("p",[e._v("但是最后在onShow的时候也遇到一些问题\ntabBar页面A   navigatorTo 到页面B，然后B   switchTab 到A，这里A会执行onShow()；\n但是我再从A跳到B再switchTab回来，A就不会再执行onShow()了，\n去开发者社区询问，得知此问题在下个版本会修复")])])}),[],!1,null,null,null);n.default=o.exports}}]);