(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{295:function(e,a,o){"use strict";o.r(a);var t=o(0),i=Object(t.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"说一说cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#说一说cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" 说一说cookie")]),e._v(" "),o("p",[e._v("设置cookie => cookie被自动添加到request header中 => 服务端接收到cookie")]),e._v(" "),o("h2",{attrs:{id:"cookie怎么工作的"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie怎么工作的","aria-hidden":"true"}},[e._v("#")]),e._v(" cookie怎么工作的")]),e._v(" "),o("p",[e._v("当网页要发送http请求时, 浏览器会先检查是否有相应的cookie, 有则自动添加request header字段中.这些事浏览器自动帮我们做的, 而且每一次http请求浏览器都会自动帮我们做;\n每个域名下的cookie的大小最大为4kb, 每个域的cookie数量最多为20个")]),e._v(" "),o("h3",{attrs:{id:"cookie的格式"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie的格式","aria-hidden":"true"}},[e._v("#")]),e._v(" cookie的格式")]),e._v(" "),o("h2",{attrs:{id:"如何设置cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#如何设置cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何设置cookie")]),e._v(" "),o("p",[e._v("cookie既可以由服务端设置, 也可以由客户端来设置")]),e._v(" "),o("h3",{attrs:{id:"服务端设置cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#服务端设置cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" 服务端设置cookie")]),e._v(" "),o("p",[e._v("不管你是请求一个资源文件(如html/js/css/图片), 还是发送一个ajax请求, 服务端都会返回response.而response header中有一项叫set-cookie, 是服务端专门用来设置cookie的;")]),e._v(" "),o("ul",[o("li",[e._v("一个set-cookie只能设置一个cookie, 当你想设置多个, 需要添加同样多的"),o("code",[e._v("set-cookie")])]),e._v(" "),o("li",[e._v("服务端可以设置cookie的所有选项: expires, domain, path, secure, HttpOnly")])]),e._v(" "),o("h3",{attrs:{id:"客户端设置cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#客户端设置cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" 客户端设置cookie")]),e._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[e._v("document"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cookie "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v('"name=xiaoming; age=12 "')]),e._v("\n")])])]),o("ul",[o("li",[e._v("客户端可以设置cookie的一下选项: expires, domain, path, secure(只有在https协议的网页中, 客户端设置secure类型cookie才能生效), 但无法设置httpOnly选项")])]),e._v(" "),o("h2",{attrs:{id:"cookie的属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie的属性","aria-hidden":"true"}},[e._v("#")]),e._v(" cookie的属性")]),e._v(" "),o("h3",{attrs:{id:"domain表示cookie所在的域"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#domain表示cookie所在的域","aria-hidden":"true"}},[e._v("#")]),e._v(" domain表示cookie所在的域")]),e._v(" "),o("p",[e._v('a.com默认的domain是a.com, test.a.com和test1.a.com访问都会有跨域问题, 如果想一个cookie所有以"a.com"结尾的域名中都可以访问, 则需要设置domain为".a.com";')]),e._v(" "),o("p",[e._v("domain可以访问该Cookie的域名。如果设置为“.baidu.com”，则所有以“baidu.com”结尾的域名都可以访问该Cookie；第一个字符必须为“.”")]),e._v(" "),o("h3",{attrs:{id:"path表示cookie的使用路径"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#path表示cookie的使用路径","aria-hidden":"true"}},[e._v("#")]),e._v(" path表示cookie的使用路径")]),e._v(" "),o("h3",{attrs:{id:"ishttponly"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ishttponly","aria-hidden":"true"}},[e._v("#")]),e._v(" isHttpOnly")]),e._v(" "),o("h2",{attrs:{id:"cookie和session的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" cookie和session的区别")]),e._v(" "),o("p",[e._v("cookie保存在客户端, session保存在服务端\n常用的是sessionId存在cookie中")]),e._v(" "),o("h2",{attrs:{id:"jwt"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#jwt","aria-hidden":"true"}},[e._v("#")]),e._v(" JWT")])])}),[],!1,null,null,null);a.default=i.exports}}]);