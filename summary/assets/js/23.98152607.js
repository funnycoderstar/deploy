(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{202:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"http2-0比http1-x有哪些改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-0比http1-x有哪些改进","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP2.0比http1.X有哪些改进")]),e._v(" "),a("ul",[a("li",[e._v("多路复用")]),e._v(" "),a("li",[e._v("header压缩")]),e._v(" "),a("li",[e._v("服务端推送")])]),e._v(" "),a("h2",{attrs:{id:"多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用","aria-hidden":"true"}},[e._v("#")]),e._v(" 多路复用")]),e._v(" "),a("ol",[a("li",[e._v("什么是持久链接（keep-alive）\n首先将一些什么是持久链接（keep-alive）是使用同一个TCP连接来发送和接受多个HTTP请求/应答，而不是为每一个新的请求/应答打开新的链接的方法。")])]),e._v(" "),a("p",[e._v("我们知道HTTP协议采用“请求-应答”模式, 当使用非KeepAlive模式时，每个请求/应答客户和服务器都要新建一个连接，完成之后立即断开(HTTP协议为无连接的协议)；当使用Keep-Alive（又称持久连接）时， Keep-Alive功能使客户端到服务器的连接持续有效，当出现对服务器的后续请求时，Keep-Alive功能避免了建立或者重新")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("keep-alive和传统的区别")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1559057504279.png",alt:"img"}}),e._v("\nkeep-alive的连接不必在每次请求都开启一个新的连接")]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("keep-alive如何配置")])]),e._v(" "),a("p",[e._v("Nginx服务器：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("keepalive_timeout "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//服务器接收在10s以内的所有connection复用超过10则关闭建立一个新的connection 0代表关闭keepalive")]),e._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[e._v("多路复用是什么\n"),a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1559057518421.png",alt:"img"}})])]),e._v(" "),a("ol",[a("li",[e._v("HTTP2请求的TCP的connection一旦建立，后续请求以stream的方式发送。\n2）每个stream的基本组成单位是frame （二进制分帧），每种frame又分为很多类型例如HEADERS Frame（头部帧），DATA Frame（内容帧）等等")]),e._v(" "),a("li",[e._v("请求头 HEADERS Frame组成了request，返回头HEADERS Frame和DATA  Frame组成了response，request和response组成了一个stream。")])]),e._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[e._v("多路复用和keep alive区别\n"),a("img",{attrs:{src:"https://cdn.suisuijiang.com/ImageMessage/5adad39555703565e79040fa_1559269633983.png",alt:"img"}}),e._v("\n1）线头阻塞（Head-of-Line Blocking），HTTP1.X虽然可以采用Keep alive来解决复用TCP的问题，但是还是无法解决请求阻塞；\n2）所谓请求阻塞意思就是一条 TCP 的connection在同一时间只允许一个请求经过，这样假如后续请求想要复用这个链接就必须等到前一个完成才行，正如上图左边表示的。\n3）之所以有这个问题就是因为HTTP1.x需要每条请求都是可以识别，按顺序发送，否则serve就无法判断该响应哪个具体的请求。\n4）HTTP2采用多路复用是指，在同一个域名下，开启一个TCP的connection，每个请求以stream的方式传输，每个stream有唯一的标识，connection一旦建立，后续的请求都可以复用这个connection并且可以同时发送，server端可以根据stream的唯一标识来响应对应的请求。")])]),e._v(" "),a("li",[a("p",[e._v("多路复用就不会关闭了么\n关闭的时机有两个")])])]),e._v(" "),a("ul",[a("li",[a("ol",[a("li",[e._v("用户离开这个页面")])])]),e._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[e._v("server主动关闭connection\n但是关闭总归是标准，不同的服务器实现时有了自己的约定，就跟keep alive一样，每种服务器都有对多路复用的这个connection有关的配置")])])])]),e._v(" "),a("h2",{attrs:{id:"头部压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头部压缩","aria-hidden":"true"}},[e._v("#")]),e._v(" 头部压缩")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("为什么要压缩\n当前平均每个页面都会产生上百个请求。越来越多的请求导致在头部的流量越来越多。尤其是每次都要传输 UserAgent, Cookie这类不会频繁变动的内容，完全是一种浪费;")])]),e._v(" "),a("li",[a("p",[e._v("压缩前后对比\n第二次的请求头部之所以非常小，是因为大部分键值对只占用了一个字节。尤其是 UserAgent、Cookie 这样的头部，首次请求中需要占用很多字节，后续请求中都只需要一个字节。")])]),e._v(" "),a("li",[a("p",[e._v("技术原理\n头部压缩需要在支持http2的浏览器和服务器之间：")])])]),e._v(" "),a("ul",[a("li",[e._v("维护一份相同的静态字典，包含常见的头部名称，以及特别常见的头部名称与值得组合")]),e._v(" "),a("li",[e._v("维护一份相同的动态，可以动态地添加内容")]),e._v(" "),a("li",[e._v("支持基于静态哈夫曼码表的哈夫曼编码\n实现细节：")])]),e._v(" "),a("ol",[a("li",[e._v("整个头部键值对都在字典中")]),e._v(" "),a("li",[e._v("头部名称在字典中，更新动态字典")]),e._v(" "),a("li",[e._v("头部名称不在字典中，更新动态字典")]),e._v(" "),a("li",[e._v("头部名称在字典中，不允许更新动态字典")]),e._v(" "),a("li",[e._v("头部名称不在字典中，不允许更新动态字典")])]),e._v(" "),a("p",[e._v("在进行 HTTP/2 网站性能优化时很重要一点是「使用尽可能少的连接数」，本文提到的头部压缩是其中一个很重要的原因：同一个连接上产生的请求和响应越多，动态字典积累得越全，头部压缩效果也就越好。所以，针对 HTTP/2 网站，最佳实践是不要合并资源，不要散列域名。\n默认情况下，浏览器会针对这些情况使用同一个连接：")]),e._v(" "),a("p",[e._v("同一域名下的资源；\n不同域名下的资源，但是满足两个条件：1）解析到同一个 IP；2）使用同一个证书；\n上面第一点容易理解，第二点则很容易被忽略。实际上 Google 已经这么做了，Google 一系列网站都共用了同一个证书，可以这样验证")]),e._v(" "),a("h2",{attrs:{id:"服务端推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端推送","aria-hidden":"true"}},[e._v("#")]),e._v(" 服务端推送")]),e._v(" "),a("p",[e._v('"推送"是HTTP/2 添加的一种新的交互模式，允许服务端"推送"\n服务端推送是HTTP2协议里面，唯一一个需要开发者自己配置的功能。其他功能都是服务器和浏览器自动实现，不需要开发者关心。')]),e._v(" "),a("h1",{attrs:{id:"以前我们做的性能优化不适用于http2了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以前我们做的性能优化不适用于http2了","aria-hidden":"true"}},[e._v("#")]),e._v(" 以前我们做的性能优化不适用于HTTP2了")]),e._v(" "),a("ul",[a("li",[e._v("js文件压缩")]),e._v(" "),a("li")]),e._v(" "),a("h1",{attrs:{id:"如何升级为http2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何升级为http2","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何升级为http2")]),e._v(" "),a("h1",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.nihaoshijie.com.cn/index.php/archives/698/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP2.0关于多路复用的研究"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://imququ.com/post/header-compression-in-http2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2 头部压缩技术介绍"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/03/http2_server_push.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2 服务器推送（Server Push）教程"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://imququ.com/post/http2-resource.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2 资料汇总"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/34074946",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2.0 相比1.0有哪些重大改进？"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/http2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2 简介"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);