(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{269:function(n,e,t){"use strict";t.r(e);var o=t(0),l=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("apt-get：Ubuntu下面的管理工具\nhomebrew: macOS的包管理工具")]),n._v(" "),t("p",[n._v("nvm\n一键安装全局模块：nvm reintall-packages\n若经常切换版本，最痛苦的莫过于全局模块需要重新安装，比如全局安装了gulp-cli模块之后又重新安装了一个Node.js版本，那么此时的gulp命令是无法使用的，唯一能做的就是重新安装全局模块，针对这种情况，nvm提供了一个很贴心的一件安装全局模块的 nvm reintall-packages 命令")]),n._v(" "),t("blockquote",[t("p",[n._v("版本\nLTS: Long-Term Support版本，有官方支持，推荐给绝大多数用户使用，一般用于生产环境，对于Bug和安全问题的修复非常及时\ncurrent: 当前正在开发的尝鲜版本\n奇数版本都是尝试性的，偶数版本的一般为LTS版本；")])]),n._v(" "),t("p",[n._v("npm\n安装模块\n无选项：将模块安装到本地node_modules目录下，但不保存在package.json里。\n--save-prod（-P）\n--save-dev（-D）\n--global(-g)")]),n._v(" "),t("blockquote",[t("p",[n._v("为了避免引用模块缺失，保证依赖模块都出现在package.json里，使用npm i --save 是一个好的习惯")])]),n._v(" "),t("p",[n._v("commonjs核心")]),n._v(" "),t("ul",[t("li",[n._v("使用module.exports 定义模块")]),n._v(" "),t("li",[n._v("通过require关键字引用模块")])]),n._v(" "),t("p",[n._v("nrm\n在不同的npm源之间来回切换\nnrm test : 对这些源进行网络测速")])])}),[],!1,null,null,null);e.default=l.exports}}]);